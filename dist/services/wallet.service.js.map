{"version":3,"sources":["../../src/services/wallet.service.ts"],"sourcesContent":["import { initializeDbConnection } from '@/app';\r\nimport { int } from 'neo4j-driver';\r\nimport Stripe from 'stripe';\r\n\r\nclass walletService {\r\n  private stripe = new Stripe(process.env.STRIPE_TEST_KEY, { apiVersion: '2022-11-15' });\r\n\r\n  public async getBalance(userId: string) {\r\n    const getAmountSession = initializeDbConnection().session();\r\n    try {\r\n      const walletAmount = await getAmountSession.executeRead(tx =>\r\n        tx.run('match (w:wallet)<-[:HAS_A]-(s:seller)<-[:IS_A]-(:user {id: $userId}) return w', {\r\n          userId: userId,\r\n        }),\r\n      );\r\n\r\n      return walletAmount.records.map(record => record.get('w').properties.amount)[0];\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      getAmountSession.close();\r\n    }\r\n  }\r\n\r\n  public async UpdateBalanceForPayment(sellerId: string, balanceAmount: any) {\r\n    const updateAmountSession = initializeDbConnection().session();\r\n    try {\r\n      await updateAmountSession.executeWrite(tx =>\r\n        tx.run('match (w:wallet)<-[:HAS_A]-(s:seller {id: $sellerId}) set w.amount = w.amount + $newAmount return w, s', {\r\n          newAmount: int(balanceAmount),\r\n          sellerId: sellerId,\r\n        }),\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      updateAmountSession.close();\r\n    }\r\n  }\r\n\r\n  public async UpdateBalanceForSubscription(sellerId: string, balanceAmount: any) {\r\n    const updateAmountSession = initializeDbConnection().session();\r\n    try {\r\n      console.log(sellerId);\r\n      const updatedAmount = await updateAmountSession.executeWrite(tx =>\r\n        tx.run('match (w:wallet)<-[:HAS_A]-(s:seller)-[:IS_A]-(u:user) set w.amount = w.amount + $newAmount return w, u', {\r\n          newAmount: int(balanceAmount),\r\n          sellerId: sellerId,\r\n        }),\r\n      );\r\n\r\n      console.log(updatedAmount.records);\r\n      \r\n\r\n      return updatedAmount.records.map(record => record.get('w').properties.amount)[0].low; \r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      updateAmountSession.close();\r\n    }\r\n  }\r\n}\r\n\r\nexport default walletService;\r\n"],"names":["walletService","getBalance","userId","getAmountSession","initializeDbConnection","session","walletAmount","executeRead","tx","run","records","map","record","get","properties","amount","error","console","log","close","UpdateBalanceForPayment","sellerId","balanceAmount","updateAmountSession","executeWrite","newAmount","int","UpdateBalanceForSubscription","updatedAmount","low","stripe","Stripe","process","env","STRIPE_TEST_KEY","apiVersion"],"mappings":";;;;+BA+DA;;;eAAA;;;qBA/DuC;6BACnB;+DACD;;;;;;;;;;;;;;;;;;;AAEnB,IAAA,AAAMA,gBAAN,MAAMA;IAGJ,MAAaC,WAAWC,MAAc,EAAE;QACtC,MAAMC,mBAAmBC,IAAAA,2BAAsB,IAAGC,OAAO;QACzD,IAAI;YACF,MAAMC,eAAe,MAAMH,iBAAiBI,WAAW,CAACC,CAAAA,KACtDA,GAAGC,GAAG,CAAC,iFAAiF;oBACtFP,QAAQA;gBACV;YAGF,OAAOI,aAAaI,OAAO,CAACC,GAAG,CAACC,CAAAA,SAAUA,OAAOC,GAAG,CAAC,KAAKC,UAAU,CAACC,MAAM,CAAC,CAAC,EAAE;QACjF,EAAE,OAAOC,OAAO;YACdC,QAAQC,GAAG,CAACF;QACd,SAAU;YACRb,iBAAiBgB,KAAK;QACxB;IACF;IAEA,MAAaC,wBAAwBC,QAAgB,EAAEC,aAAkB,EAAE;QACzE,MAAMC,sBAAsBnB,IAAAA,2BAAsB,IAAGC,OAAO;QAC5D,IAAI;YACF,MAAMkB,oBAAoBC,YAAY,CAAChB,CAAAA,KACrCA,GAAGC,GAAG,CAAC,0GAA0G;oBAC/GgB,WAAWC,IAAAA,gBAAG,EAACJ;oBACfD,UAAUA;gBACZ;QAEJ,EAAE,OAAOL,OAAO;YACdC,QAAQC,GAAG,CAACF;QACd,SAAU;YACRO,oBAAoBJ,KAAK;QAC3B;IACF;IAEA,MAAaQ,6BAA6BN,QAAgB,EAAEC,aAAkB,EAAE;QAC9E,MAAMC,sBAAsBnB,IAAAA,2BAAsB,IAAGC,OAAO;QAC5D,IAAI;YACFY,QAAQC,GAAG,CAACG;YACZ,MAAMO,gBAAgB,MAAML,oBAAoBC,YAAY,CAAChB,CAAAA,KAC3DA,GAAGC,GAAG,CAAC,2GAA2G;oBAChHgB,WAAWC,IAAAA,gBAAG,EAACJ;oBACfD,UAAUA;gBACZ;YAGFJ,QAAQC,GAAG,CAACU,cAAclB,OAAO;YAGjC,OAAOkB,cAAclB,OAAO,CAACC,GAAG,CAACC,CAAAA,SAAUA,OAAOC,GAAG,CAAC,KAAKC,UAAU,CAACC,MAAM,CAAC,CAAC,EAAE,CAACc,GAAG;QACtF,EAAE,OAAOb,OAAO;YACdC,QAAQC,GAAG,CAACF;QACd,SAAU;YACRO,oBAAoBJ,KAAK;QAC3B;IACF;;QAvDA,uBAAQW,UAAS,IAAIC,eAAM,CAACC,QAAQC,GAAG,CAACC,eAAe,EAAE;YAAEC,YAAY;QAAa;;AAwDtF;MAEA,WAAenC"}