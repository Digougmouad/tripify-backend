{"version":3,"sources":["../../src/middlewares/fileValidation.middleware.ts"],"sourcesContent":["import { NextFunction, Response } from 'express';\r\nimport { HttpException } from '@exceptions/HttpException';\r\nimport { RequestWithUser } from '@interfaces/auth.interface';\r\n\r\nconst fileMiddleware = async (req: RequestWithUser, res: Response, next: NextFunction) => {\r\n  \r\n  \r\n  try {\r\n    if (req.files) {\r\n      const fileeData = req.files;\r\n      \r\n      const filesTooLarge = [];\r\n      if (fileeData.frontSide) {\r\n        for (let key in fileeData) {\r\n          if (fileeData[key][0].size > 5000000) filesTooLarge.push(fileeData[key][0].fieldname);\r\n          \r\n        }\r\n        if (filesTooLarge.length > 0) {\r\n          return next(\r\n            new HttpException(\r\n            500,\r\n              `${\r\n                filesTooLarge.length > 0\r\n                  ? \"a file is too large maximum is 5mb and a file isn't an image\"\r\n                  : filesTooLarge.length > 0 && 'a file is too large'\r\n              }`,\r\n            ),\r\n          );\r\n        }\r\n        \r\n        next();\r\n      } else {\r\n        for (let key in fileeData) {\r\n          if (fileeData[key].size > 5000000) filesTooLarge.push(fileeData[key].fieldname);\r\n        }\r\n        if (filesTooLarge.length > 0) {\r\n          return next(\r\n            new HttpException(\r\n              500,\r\n              `${\r\n                filesTooLarge.length > 0\r\n                  ? \"a file is too large maximum is 5mb and a file isn't an image\"\r\n                  : filesTooLarge.length > 0 && 'a file is too large'\r\n              }`,\r\n            ),\r\n          );\r\n        }\r\n        next();\r\n      } \r\n    } else if (req.file) {\r\n      const fileData = req.file;\r\n      if (fileData.size > 5000000) return next(new HttpException(401, `${fileData.fieldname} is too large`));\r\n      next();\r\n    } else {\r\n      next(new HttpException(500, 'file needed'));\r\n    }\r\n  } catch (error) {\r\n    next(new HttpException(500, error));\r\n  }\r\n};\r\n\r\nexport default fileMiddleware;\r\n"],"names":["fileMiddleware","req","res","next","files","fileeData","filesTooLarge","frontSide","key","size","push","fieldname","length","HttpException","file","fileData","error"],"mappings":";;;;+BA6DA;;;eAAA;;;+BA5D8B;AAG9B,MAAMA,iBAAiB,OAAOC,KAAsBC,KAAeC;IAGjE,IAAI;QACF,IAAIF,IAAIG,KAAK,EAAE;YACb,MAAMC,YAAYJ,IAAIG,KAAK;YAE3B,MAAME,gBAAgB,EAAE;YACxB,IAAID,UAAUE,SAAS,EAAE;gBACvB,IAAK,IAAIC,OAAOH,UAAW;oBACzB,IAAIA,SAAS,CAACG,IAAI,CAAC,EAAE,CAACC,IAAI,GAAG,SAASH,cAAcI,IAAI,CAACL,SAAS,CAACG,IAAI,CAAC,EAAE,CAACG,SAAS;gBAEtF;gBACA,IAAIL,cAAcM,MAAM,GAAG,GAAG;oBAC5B,OAAOT,KACL,IAAIU,4BAAa,CACjB,KACE,CAAC,EACCP,cAAcM,MAAM,GAAG,IACnB,iEACAN,cAAcM,MAAM,GAAG,KAAK,sBACjC,CAAC;gBAGR;gBAEAT;YACF,OAAO;gBACL,IAAK,IAAIK,OAAOH,UAAW;oBACzB,IAAIA,SAAS,CAACG,IAAI,CAACC,IAAI,GAAG,SAASH,cAAcI,IAAI,CAACL,SAAS,CAACG,IAAI,CAACG,SAAS;gBAChF;gBACA,IAAIL,cAAcM,MAAM,GAAG,GAAG;oBAC5B,OAAOT,KACL,IAAIU,4BAAa,CACf,KACA,CAAC,EACCP,cAAcM,MAAM,GAAG,IACnB,iEACAN,cAAcM,MAAM,GAAG,KAAK,sBACjC,CAAC;gBAGR;gBACAT;YACF;QACF,OAAO,IAAIF,IAAIa,IAAI,EAAE;YACnB,MAAMC,WAAWd,IAAIa,IAAI;YACzB,IAAIC,SAASN,IAAI,GAAG,SAAS,OAAON,KAAK,IAAIU,4BAAa,CAAC,KAAK,CAAC,EAAEE,SAASJ,SAAS,CAAC,aAAa,CAAC;YACpGR;QACF,OAAO;YACLA,KAAK,IAAIU,4BAAa,CAAC,KAAK;QAC9B;IACF,EAAE,OAAOG,OAAO;QACdb,KAAK,IAAIU,4BAAa,CAAC,KAAKG;IAC9B;AACF;MAEA,WAAehB"}