{"version":3,"sources":["../../src/controllers/post.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport postService from '@/services/post.service';\n\nclass postController {\n  public postService = new postService();\n\n  public getPopularAlbums = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const popularPosts = await this.postService.getPopularAlbums();\n\n      console.log(popularPosts);\n      \n\n      res.status(201).json({ popularPosts });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public buy = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const buyerData = req.body;\n      \n      await this.postService.buy(buyerData);\n\n      res.status(200);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public buyPack = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const buyerData = req.body;\n      \n      await this.postService.buyPack(buyerData);\n\n      res.status(200);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getRandomAlbums = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const page = Number(req.params.page);\n      const userId = String(req.params.id);\n      \n      const randomAlbums = await this.postService.getRandomAlbums(page, userId);\n\n      res.status(201).json( randomAlbums );\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getAlbumByCategory = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const categoryId = String(req.params.id);\n      const AlbumByCategory = await this.postService.getAlbumByCategory(categoryId);\n\n      res.status(201).json({ AlbumByCategory });\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  public getPostPictures = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postId = String(req.params.id);\n      const postPictures = await this.postService.getPostPictures(postId);\n\n      res.status(201).json({ data: postPictures });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getAllAlbums = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const allAlbums = await this.postService.getAllAlbums();\n      \n\n      res.status(201).json({ allAlbums });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getSellerAlbum = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      console.log(userId);\n      \n      const sellerAlbums = await this.postService.getSellerAlbums(userId);\n      \n      res.status(201).json(sellerAlbums);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getCategories = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const categories = await this.postService.getCategories();\n\n      console.log(categories);\n      \n\n      res.status(201).json({ categories });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateViews = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postId = String(req.params.id);\n      const updatedViews = await this.postService.UpdateViews(postId);\n\n      res.status(201).json({ updatedViews });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public likePost = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const albumId = String(req.params.id);\n      const userId = req.body.userId;\n      await this.postService.likePost(albumId, userId);\n\n      res.status(201).json({ message: \"post liked successfully\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getAlbumPlan = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const albumId = String(req.params.id);\n      let plan = await this.postService.getAlbumPlan(albumId);\n\n      res.status(200).json(plan);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createPost = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postData = req.body;\n      const createdPost = await this.postService.createPost(postData);\n\n      res.status(201).json({ data: createdPost });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createPrivatePost = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postData = req.body;\n      const createdPost = await this.postService.createPrivatePost(postData);\n\n      res.status(201).json({ data: createdPost });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createPack = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const packs = req.body;\n      const createdPost = await this.postService.createPack(packs);\n\n      res.status(201).json({ data: createdPost });\n    } catch (error) {\n      next(error);\n    }\n  };\n  \n  public getPacks = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const packs = await this.postService.getPacks();\n\n      res.status(201).json({ data: packs });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getPrivateTrips = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const privateTrips = await this.postService.getPrivateTrips();\n\n      res.status(201).json({ data: privateTrips });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public uploadPostPictures = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const pictureFiles = req.files;\n      const collectionId = String(req.params.id);\n      await this.postService.uploadPostPictures(pictureFiles, collectionId);\n\n      res.status(201).json({ message: \"post pictures have been uploaded successfully\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default postController;\n"],"names":["postController","postService","getPopularAlbums","req","res","next","popularPosts","console","log","status","json","error","buy","buyerData","body","buyPack","getRandomAlbums","page","Number","params","userId","String","id","randomAlbums","getAlbumByCategory","categoryId","AlbumByCategory","getPostPictures","postId","postPictures","data","getAllAlbums","allAlbums","getSellerAlbum","sellerAlbums","getSellerAlbums","getCategories","categories","updateViews","updatedViews","UpdateViews","likePost","albumId","message","getAlbumPlan","plan","createPost","postData","createdPost","createPrivatePost","createPack","packs","getPacks","getPrivateTrips","privateTrips","uploadPostPictures","pictureFiles","files","collectionId"],"mappings":"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"}