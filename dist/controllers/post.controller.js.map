{"version":3,"sources":["../../src/controllers/post.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport postService from '@/services/post.service';\n\nclass postController {\n  public postService = new postService();\n\n  public getPopularPosts = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const popularPosts = await this.postService.getPopularPosts();\n\n      res.status(201).json({ data: popularPosts });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getRecentPosts = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const recentPosts = await this.postService.getRecentPosts();\n\n      res.status(201).json({ data: recentPosts });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateViews = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postId = String(req.params.id);\n      const updatedViews = await this.postService.UpdateViews(postId);\n\n      res.status(201).json({ updatedViews });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createPost = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postData = req.body;\n      const userId = String(req.params.id);\n      const createdPost = await this.postService.createPost(userId, postData);\n\n      res.status(201).json({ data: createdPost });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default postController;\n"],"names":["postController","postService","getPopularPosts","req","res","next","popularPosts","status","json","data","error","getRecentPosts","recentPosts","updateViews","postId","String","params","id","updatedViews","UpdateViews","createPost","postData","body","userId","createdPost"],"mappings":";;;;+BAkDA;;aAAA;;oDAjDwB;;;;;;AAExB,IAAA,AAAMA,iBAAN,MAAMA;;aACGC,cAAc,IAAIA,oBAAW;aAE7BC,kBAAkB,OAAOC,KAAcC,KAAeC,OAAsC;YACjG,IAAI;gBACF,MAAMC,eAAe,MAAM,IAAI,CAACL,WAAW,CAACC,eAAe;gBAE3DE,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMH;gBAAa;YAC5C,EAAE,OAAOI,OAAO;gBACdL,KAAKK;YACP;QACF;aAEOC,iBAAiB,OAAOR,KAAcC,KAAeC,OAAsC;YAChG,IAAI;gBACF,MAAMO,cAAc,MAAM,IAAI,CAACX,WAAW,CAACU,cAAc;gBAEzDP,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMG;gBAAY;YAC3C,EAAE,OAAOF,OAAO;gBACdL,KAAKK;YACP;QACF;aAEOG,cAAc,OAAOV,KAAcC,KAAeC,OAAsC;YAC7F,IAAI;gBACF,MAAMS,SAASC,OAAOZ,IAAIa,MAAM,CAACC,EAAE;gBACnC,MAAMC,eAAe,MAAM,IAAI,CAACjB,WAAW,CAACkB,WAAW,CAACL;gBAExDV,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEU;gBAAa;YACtC,EAAE,OAAOR,OAAO;gBACdL,KAAKK;YACP;QACF;aAEOU,aAAa,OAAOjB,KAAcC,KAAeC,OAAsC;YAC5F,IAAI;gBACF,MAAMgB,WAAWlB,IAAImB,IAAI;gBACzB,MAAMC,SAASR,OAAOZ,IAAIa,MAAM,CAACC,EAAE;gBACnC,MAAMO,cAAc,MAAM,IAAI,CAACvB,WAAW,CAACmB,UAAU,CAACG,QAAQF;gBAE9DjB,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMe;gBAAY;YAC3C,EAAE,OAAOd,OAAO;gBACdL,KAAKK;YACP;QACF;;AACF;MAEA,WAAeV"}