{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { RequestWithUser } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\nimport AuthService from '@services/auth.service';\n\nclass AuthController {\n  public authService = new AuthService();\n\n  public signUp = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = req.body;\n      const signUpUserData = await this.authService.signup(userData);\n\n      signUpUserData.message ? res.status(201).json(signUpUserData) : res.status(302).json(signUpUserData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public logIn = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = req.body;\n      const loggedInData = await this.authService.login(userData);\n      res.status(200).json(loggedInData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public changePassword = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = req.body;\n      const userId: string = String(req.params.id);\n      const chengedData = await this.authService.changePassword(userId, userData);\n      res.status(200).json({data: chengedData});\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public generateRefreshToken = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const token = req.body.data.token;\n      const loggedInData = await this.authService.refreshToken(token);\n      res.status(200).json(loggedInData);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public logOut = async (req: RequestWithUser, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData: User = req.user;\n      const logOutUserData: User = await this.authService.logout(userData);\n\n      res.setHeader('Set-Cookie', ['Authorization=; Max-age=0']);\n      res.status(200).json({ data: logOutUserData, message: 'logout' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default AuthController;\n"],"names":["AuthController","authService","AuthService","signUp","req","res","next","userData","body","signUpUserData","signup","message","status","json","error","console","log","logIn","loggedInData","login","changePassword","userId","String","params","id","chengedData","data","generateRefreshToken","token","refreshToken","logOut","user","logOutUserData","logout","setHeader"],"mappings":";;;;+BA+DA;;aAAA;;oDA5DwB;;;;;;AAExB,IAAA,AAAMA,iBAAN,MAAMA;;aACGC,cAAc,IAAIC,oBAAW;aAE7BC,SAAS,OAAOC,KAAcC,KAAeC,OAAsC;YACxF,IAAI;gBACF,MAAMC,WAAWH,IAAII,IAAI;gBACzB,MAAMC,iBAAiB,MAAM,IAAI,CAACR,WAAW,CAACS,MAAM,CAACH;gBAErDE,eAAeE,OAAO,GAAGN,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACJ,kBAAkBJ,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACJ,eAAe;YACtG,EAAE,OAAOK,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;aAEOG,QAAQ,OAAOb,KAAcC,KAAeC,OAAsC;YACvF,IAAI;gBACF,MAAMC,WAAWH,IAAII,IAAI;gBACzB,MAAMU,eAAe,MAAM,IAAI,CAACjB,WAAW,CAACkB,KAAK,CAACZ;gBAClDF,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACK;YACvB,EAAE,OAAOJ,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;aAEOM,iBAAiB,OAAOhB,KAAcC,KAAeC,OAAsC;YAChG,IAAI;gBACF,MAAMC,WAAWH,IAAII,IAAI;gBACzB,MAAMa,SAAiBC,OAAOlB,IAAImB,MAAM,CAACC,EAAE;gBAC3C,MAAMC,cAAc,MAAM,IAAI,CAACxB,WAAW,CAACmB,cAAc,CAACC,QAAQd;gBAClEF,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAACa,MAAMD;gBAAW;YACzC,EAAE,OAAOX,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;aAEOa,uBAAuB,OAAOvB,KAAcC,KAAeC,OAAsC;YACtG,IAAI;gBACF,MAAMsB,QAAQxB,IAAII,IAAI,CAACkB,IAAI,CAACE,KAAK;gBACjC,MAAMV,eAAe,MAAM,IAAI,CAACjB,WAAW,CAAC4B,YAAY,CAACD;gBACzDvB,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACK;YACvB,EAAE,OAAOJ,OAAO;gBACdR,KAAKQ;YACP;QACF;aAEOgB,SAAS,OAAO1B,KAAsBC,KAAeC,OAAsC;YAChG,IAAI;gBACF,MAAMC,WAAiBH,IAAI2B,IAAI;gBAC/B,MAAMC,iBAAuB,MAAM,IAAI,CAAC/B,WAAW,CAACgC,MAAM,CAAC1B;gBAE3DF,IAAI6B,SAAS,CAAC,cAAc;oBAAC;iBAA4B;gBACzD7B,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEa,MAAMM;oBAAgBrB,SAAS;gBAAS;YACjE,EAAE,OAAOG,OAAO;gBACdR,KAAKQ;YACP;QACF;;AACF;MAEA,WAAed"}