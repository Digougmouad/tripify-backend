{"version":3,"sources":["../../src/controllers/users.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { User } from '@interfaces/users.interface';\nimport userService from '@services/users.service';\n\nclass UsersController {\n  public userService = new userService();\n\n  public getUsers = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const findAllUsersData: User[] = await this.userService.findAllUser();\n\n      res.status(200).json({ data: findAllUsersData, message: 'findAll' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getUserById = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      const findOneUserData = await this.userService.findUserById(userId);\n\n      res.status(200).json({ data: findOneUserData });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public changePassword = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const email = String(req.params.email);\n      const userData = req.body;\n      const findOneUserData = await this.userService.changePassword(email, userData);\n\n      res.status(200).json({ data: findOneUserData, message: 'findOne' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public emailConfirming = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const token = String(req.params.token);\n      const confirmed = await this.userService.emailConfirming(token);\n\n      res.status(201).json({ data: confirmed });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public buyPost = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const postId = Number(req.params.id);\n      const userData = req.body;\n      const boughtPost = await this.userService.buyPost(postId, userData);\n\n      res.status(200).json({ data: boughtPost });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateUser = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = Number(req.params.id);\n      const userData: CreateUserDto = req.body;\n      const updateUserData: User[] = await this.userService.updateUser(userId, userData);\n\n      res.status(200).json({ data: updateUserData, message: 'updated' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public desactivateUser = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = Number(req.params.id);\n      const desactivatedUser = await this.userService.desactivateUser(userId);\n\n      res.status(200).json({ data: desactivatedUser });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default UsersController;\n"],"names":["UsersController","userService","getUsers","req","res","next","findAllUsersData","findAllUser","status","json","data","message","error","getUserById","userId","String","params","id","findOneUserData","findUserById","changePassword","email","userData","body","emailConfirming","token","confirmed","buyPost","postId","Number","boughtPost","updateUser","updateUserData","desactivateUser","desactivatedUser"],"mappings":"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"}